
import (
	"rectangle.um"
	"image.um"
	"std.um"
)

const (
	NONE* = -1
)

var (
	scene*: int
	w*, h*: int32
	cam*: rectangle.rect
)

fn readall*(path: str): str {
	f := std.fopen(path, "r")
  const blockSize = 32
  res := ""

  for ok := true; ok {
	  var buff: [blockSize + 1]char
	  ok = std.fread(f, ^[blockSize]char(&buff)) == 1
	  res += str([]char(buff))
  }

	std.fclose(f)
  return res
}

fn smaptoanim*(inp: image.img, count: int): []image.img {
	out := make([]image.img, count)

	w, h := inp.getdims()
	w = w / count

	for i:=0; i < count; i++ {
		out[i] = inp.copy()
		out[i].crop(w * i, 0, w * i + w, h)
	}

	return out
}

fn flipvanim*(inp: []image.img): []image.img {
	out := make([]image.img, len(inp))

	for i:=0; i < len(inp); i++ {
		out[i] = inp[i].copy()
		out[i].flipv()
	}
	return out
}
