
import (
	"entity.um"
	"polygon.um"
	"input.um"
	"tophat.um"
	"misc.um"

	"level.um"
	"global.um"
)

var (
	ent: entity.ent
	mx, my: real
	maxy: real = 4
	gscale: real = 0.001
	canjump: bool = false
)

fn init*() {
	ent = entity.mk(polygon.mk(0, 0, []int32{0, 0, 5, 0, 5, 10, 0, 10}), tophat.cyan, -1)
}

fn handle*() {
	ent.p.y += my * tophat.delta
//	ent.p.x, ent.p.y = input.getglobalmousepos(global.cam)
	var cx, cy: int32
	coll := level.tmap.getcoll(ent, &cx, &cy)
	if coll {

		if cy >= ent.p.x + ent.p.h && mx >= 0 {
			mx = 0
			//ent.p.y = cy - cy%level.tmap.cellsize// - ent.p.h
			abscy := (cy - level.tmap.y)
			ent.p.y = abscy - abscy%level.tmap.cellsize + level.tmap.y - ent.p.h
		}
	}

	if input.isjustpressed(input.KEY_SPACE) {
		my -= 0.008 * tophat.delta
	}

	if my < maxy {
		my += gscale
	}


	ent.color = tophat.cyan * int(level.tmap.getcoll(ent, &cx, &cy)) | 0xff

	ent.draw(global.cam)
}
