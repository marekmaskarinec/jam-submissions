
import (
	"th.um"
	"rect.um"
	"input.um"
	"canvas.um"
	"window.um"

	"scene.um"
	"global.um"
	"noksnd.um"
	"splash.um"
	"menu/menu.um"
	"game/gameloop.um"
	"dialog/dialog.um"
	"gameover/gameover.um"
)

// In global.um, there are lightColor and darkColor constants - the two allowed
// colors. Edit global.camPos instead of global.cam for pixel perfect camera.

// Things to be aware of:
//   - decimal sizes of font
//   - particles (there is currently no pixel perfect mode)
//   - transform positions - employ similar approach used with cam
//   - rotation - you can only use multiples of 90 degrees
//   - canvas.drawLine - the drawLine function doesn't draw a pixelized line.
//       I recommend implementing the Bresenham's line algorithm.

// The noksnd.um module ensures, that only one sound is played at once. When you
// load a sound, register it using addSound. If you want to play it, pass it to
// the play function instead of using the play method like usual.

fn main() {
	// normal setup
	window.setup("nokia game", 840, 480)
	global.cam = rect.mk(0, 0, 84, 48)

	noksnd.init()
	scene.init()

	splash.init()
	gameloop.init()
	gameover.init()
	dialog.init()
	menu.init()

	menu.mainMenuPreset()

	paused := false
	pauseTime := 0

	for window.cycle(global.cam) && global.running {
		// draw background
		canvas.drawRect(global.darkColor, rect.Rect{0, 0, global.cam.w, global.cam.h})
		if input.isJustPressed(input.key_shift) {
			pauseTime = th.time
			paused = !paused
		}

		if paused {
			th.time = pauseTime
			th.delta = 0
		}

		scene.handle()
		scene.draw(global.cam)

		// pixel perfect camera
		global.cam.x = round(global.camPos.x)
		global.cam.y = round(global.camPos.y)
	}
}
