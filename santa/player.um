
import (
	"th.um"
	"ent.um"
	"rect.um"
	"image.um"
	"input.um"
	"signal.um"

	"global.um"
)

const (
	maxSpeed = 0.05
	gravity = 0.01
	jumpForce = 0.14
	wateringSpeed = 0.005
)

var (
	e: ent.Ent

	motion: int
	groundY: th.fu
	upMotion: th.fu

	idleImage: image.Image
	walkAnim: []image.Image
)

fn init*() {
	e.t.s = th.Vf2{1, 1}
	e.r = rect.mk(0, 0, 5, 8)

	e.t.p.y = global.cam.h/2 - global.cam.h*global.bottomPart - e.r.h
	groundY = e.t.p.y

	e.c = th.black

	idleImage = image.load("gfx/player-idle.png")
	e.i = idleImage
	walkAnim = []image.Image{image.load("gfx/player-walk0.png"), image.load("gfx/player-walk1.png")}
}

fn handle*(cacti: []^ent.Ent) {
	if input.isPressed(int32('a')) {
		motion -= 1
	}

	if input.isPressed(int32('d')) {
		motion += 1
	}

	if input.isJustPressed(int32('w')) && e.t.p.y == groundY {
		upMotion = jumpForce
	}

	if input.isJustPressed(int32('e')) {
		signal.emit("spawn_cactus", e.t.p.x)
	}

	if input.isPressed(int32('f')) {
		colls := e.getColl(cacti, 1)
		
		if len(colls) != 0 {
			signal.emit("water_cactus", []th.fu{colls[0].index, wateringSpeed * th.delta})
		}
	}

	if motion == 0 {
		e.i = idleImage
	} else {
		e.animate(4, &walkAnim, th.time)
		if motion == -1 {
			e.i.fliph(false)
			idleImage.fliph(false)
		} else {
			e.i.fliph(true)
			idleImage.fliph(true)
		}
	}


	e.t.p.x += motion * maxSpeed * th.delta

	upMotion -= gravity
	e.t.p.y -= upMotion * th.delta
	if e.t.p.y > groundY {
		e.t.p.y = groundY
	}

	motion = 0
}

fn draw*() {
	e.draw(global.cam)
}
